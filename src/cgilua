#!/usr/bin/lua
local lfs = require"lfs"
local server = require"cgilua_cli.server"
local templates = require"cgilua_cli.templates"
local args = require"cgilua_cli.args"

local read_template = function(path)
   local tmpl = templates[path]
   assert(tmpl, "Não achei template:".. path)
   return tmpl
end

local function subs (s, t)
	return (s:gsub ("%$%$([_%w]+)%$%$", t))
end

local function exec(cmd)
  print(cmd)
  os.execute(cmd)
end

local function write(file_name, content)
  assert(content ~= nil, "No content for " .. file_name)
    local fh, err  = assert(io.open(file_name, "w"))
    fh:write(content)
end

 
local nome_arq = arg[0]
local opcoes = {
	_nome = nome_arq.." [OPÇÕES]*",

	new = {"Creates new project"},
	start = "Start dummy webserver",
	install = "Install rockspec dependencies",
}
local arg = args.get (opcoes, ...)

if arg.new then
  local prj = arg.new
    local paths = {
    	"/src",
    	"/src/modules",
    	"/src/cgi-bin",
    	"/src/luarocks",
    	{ "/src/cgi-bin/main.lua", read_template"main.lua" },
    	{ "/" .. prj .. "-0.1-0.rockspec", read_template"rockspec.lua", { PROJECT_NAME = prj } },
    }
    lfs.mkdir(prj)
    for _, path in ipairs(paths) do
      if type(path) == "table" then
        local content = path[2]
        local sub = path[3]
        local path = path[1]
        if sub then
          content = subs(content, sub)
        end
        write(prj .. path, content)
      else
        lfs.mkdir(prj .. path)
      end
    end
elseif arg.start then
  server.start(8765)
elseif arg.install then
  exec("luarocks make *.rockspec --lua-version=5.3 --tree=src/luarocks")
end


